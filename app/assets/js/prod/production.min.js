"use strict";angular.module("myApp",["ngRoute","ui.bootstrap","myApp.services","myApp.menu","myApp.modal"]).config(function($routeProvider){$routeProvider.when("/card/:name",{templateUrl:"modalContainer",controller:"ModalContainerCtrl"}).when("/menu",{controller:"MenuCtrl"}).otherwise({redirectTo:"/menu"})}),angular.module("myApp.menu",["ngRoute"]).controller("MenuCtrl",["$scope","DataService",function($scope,DataService){function loadData(){DataService.getJSON().then(function(articles){$scope.cards=$.map(articles,function(el){return el})})}$scope.cards=loadData()}]),angular.module("myApp.modal",["ngRoute"]).controller("ModalContainerCtrl",["$scope","$modal","$route","$location",function($scope,$modal,$route,$location){var modalInstance=$modal.open({templateUrl:"../assets/templates/modal.html",controller:"ModalCtrl"});$scope.activity=$route.current.pathParams.name,$scope.$on("$locationChangeStart",function(){modalInstance.close()}),$scope.close=function(){$modalInstance.dismiss(),$location.path("/menu")}}]).controller("ModalCtrl",["$scope","$route","$location","$sce","$timeout","$modalInstance","DataService",function($scope,$route,$location,$sce,$timeout,$modalInstance,DataService){$scope.close=function(){$modalInstance.dismiss(),$location.path("/menu")},$scope.activity=$route.current.pathParams.name,$scope.card=DataService.getCard($scope.activity),$scope.next=DataService.getNext(),$scope.prev=DataService.getPrev(),$scope.TrustDangerousSnippet=function(post){return $sce.trustAsHtml(post)}}]),angular.module("myApp.services",[]).service("DataService",["$http","$q",function($http,$q){function getCard(name){var i;if(cards)for(i=0;i<cards.length;i++)if(cards[i].shortName==name)return card=cards[i],nextIndex=i+1,prevIndex=i-1,next=cards[nextIndex],prev=cards[prevIndex],card;return card}function getNext(){return next?next.shortName:cards[0].shortName}function getPrev(){return prev?prev.shortName:cards[cards.length-1].shortName}function getJSON(){var request=$http({method:"get",dataType:"jsonp",url:"../assets/json/activities.json",params:{action:"get"}});return cards?cards:request.then(handleSuccess,handleError)}function handleError(response){return $q.reject(angular.isObject(response.data)&&response.data.message?response.data.message:"An unknown error occurred.")}function handleSuccess(response){return cards=response.data}return{getJSON:getJSON,getCard:getCard,getNext:getNext,getPrev:getPrev};var card,cards,next,prev,nextIndex,prevIndex}]).service("InputService",["",function(){return{}}]);